name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Manual Approval Required
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: kumarbhakta81
          minimum-approvals: 1
          issue-title: "Production Deployment Approval Required"
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name garment-prod-cluster
      
      - name: Blue-Green Deployment - Backend
        run: |
          # Deploy to green environment
          kubectl set image deployment/garment-backend-green garment-backend=kumarbhakta81/garment-backend:${{ github.sha }} -n garment-prod
          kubectl rollout status deployment/garment-backend-green -n garment-prod --timeout=600s
          
          # Health check on green
          sleep 30
          kubectl exec -n garment-prod deployment/garment-backend-green -- curl -f http://localhost:3000/health
          
          # Switch traffic to green
          kubectl patch service garment-backend-service -p '{"spec":{"selector":{"version":"green"}}}' -n garment-prod
          
          # Wait and verify
          sleep 30
      
      - name: Blue-Green Deployment - Frontend
        run: |
          # Deploy to green environment
          kubectl set image deployment/garment-admin-green garment-admin=kumarbhakta81/garment-admin:${{ github.sha }} -n garment-prod
          kubectl rollout status deployment/garment-admin-green -n garment-prod --timeout=600s
          
          # Switch traffic to green
          kubectl patch service garment-admin-service -p '{"spec":{"selector":{"version":"green"}}}' -n garment-prod
      
      - name: Run Health Checks
        run: ./deploy/scripts/health-check.sh production
      
      - name: Setup Node.js for Post-Deployment Tests
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies for Tests
        run: |
          npm ci
      
      - name: Post-Deployment Verification
        run: |
          npm run test:e2e:production
        env:
          PRODUCTION_API_URL: https://api.garmentplatform.com
      
      - name: Scale Down Blue Environment
        if: success()
        run: |
          kubectl scale deployment garment-backend-blue --replicas=0 -n garment-prod
          kubectl scale deployment garment-admin-blue --replicas=0 -n garment-prod